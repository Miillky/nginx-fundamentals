# Create password file
# 1. apt -get install apache2-utils
# -c write to file
# 2. htpasswd -c /etc/nginx/.htpasswd user1

# install siege (like apache bench but more focused on load testing rather then benchmarking it)
# 1. apt-get intall siege
# -v -> verbose loging
# -r -> run x tests
# -c -> concurrent connections
# 2. siege -v -r 2 -c 5 https://site1.com/nginx.png


user www-data;

events {
    worker_connections 1024;
}

http {
	include mime.types;

    limit_req_zone $request_uri zone=MYZONE:10m rate=60r/m burst=5;

    server {
        listen 80;

        server_name site1.com
        return 301 https://$host$request_uri;
    }

	server {
		
		listen 443 ssl http2;
		server_name site1.com;
		
		root /home/sites/demo;

		index index.php index.html;

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        add_header Strict-Transport-Scurity "max-age=31536000" always;

        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 5h;
        ssl_session_tickets on; 

		location / {
            # Create authetication
            auth_basic "Secure Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
			try_files $uri $uri/ =404;
		}		

		location ~\.php$ {
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.4-fpm.sock;
		}
	}
}
