events {}

#####################
# (1) Array directive
#####################
# Can be specified multiple times whout overriding a previous setting
# Gets inherited by all child contexts
# Child context can override inheritance by re-declaring drective
access_log /var/log/nginx/access.log;
access_log /var/log/nginx/custom.log.gz custom_fromat;

http {

    # Include statement - non directive
    include mime.types;

    server {
        listen 80;
        server_name site1.com;

        # Inhertis access_log from parent context (1)
    };

    server {
        listen 80;
        server_name site2.com;

        #########################
        # (2) Standard directive
        #########################
        # Can only be declared once. A second delaration overrides the first
        # Gets inherited by all child contexts
        # Child context can override inheritance by re-delaring directive
        root /sites/site2

        # Completely overrides inheritance from (1)
        access_log off;

        location /images {

            # Uses root directive inherited from (2)
            try_files $uri /stock.png;
        }
    }

    location /secret {

        #######################
        # (3) Action Directive
        #######################
        # Invokes an action such as a rewrite or redirect
        # Inheritance does not apply as the request is either stopped (redirect/response) or re-evaluated (rewrite)
        return 403 'You do not have prmission to view this.';
    }
}