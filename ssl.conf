user www-data;

events {
    worker_connections 1024;
}

http {
	include mime.types;

    # Redirect all traffic to HTTPS (from HTTP port 80)
    server {
        listen 80;

        server_name site1.com
        return 301 https://$host$request_uri;
    }

	server {
		
		listen 443 ssl http2;
		server_name site1.com;
		
		root /home/sites/demo;

		index index.php index.html;

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;

        # Disable SSL protocol
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Optimize cipher suits
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # Enable DH Params (enables key exanges betwee the client and server with perfect secrecy)
        # openssl dhparam 2048 -out /etc/nginx/ssl/dhparam.pem
        # size of 2048 needs to be the same size as the ssl key
        # maybe the file wont be created because of permmision
        # create it manualy with key content
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS - Strict transport security (minimize http to https redirects)
        # one year in seconds
        add_header Strict-Transport-Scurity "max-age=31536000" always;

        # SSL sessions
        # shared -> keep on disk
        # on ssl for 40 MB
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 5h;
        # provide the browser with a ticket to validate the session
        ssl_session_tickets on; 

        # for checking is if ssl is working perform a curl request with curl -Ik https://site1.com

		location / {
			try_files $uri $uri/ =404;
		}		

		location ~\.php$ {
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.4-fpm.sock;
		}
	}
}
